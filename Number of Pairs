/********************************************************* QUESTION*******************************************************************/
/*
You will be given an array of integers and a target value. Determine the number of pairs of array elements that have a 
difference equal to a target value.
For example, given an array of [1, 2, 3, 4] and a target value of 1, we have three values meeting the condition:2-1=1,3-2=1,
4-3=1. =>3 pairs
*/
/*********************************************************SOUTION CODE*************************************************/
class qs
{
    public:
    vector<int> A;
    void get(vector<int> B)
    {
        for(int i=0;i<B.size();i++)
        {
            A.push_back(B[i]);
        }
    }
    vector<int> put()
    {
        return A;
    }
    int partition(int start,int end)
    {
    int key,temp,i,j;
    key=A[end];
    j=start-1;
    for(i=start;i<end;i++)
    {
        if(A[i]<key)
        {
            temp=A[i];
            A[i]=A[++j];
            A[j]=temp;
        } 
    }   
            temp=A[i];
            A[i]=A[++j];
            A[j]=temp;
        
    return j;
    }//partition
    void quicksort(int start,int end)
    {
        int m=0;
        if(start<end){ 
        m=partition(start,end);
        quicksort(start,m-1);
        quicksort(m+1,end);
        }
    }//quick sort
    
};//class

int pairs(int k, vector<int> a) {
//sort
//quick sort
int n=a.size(),i,j,count=0,temp=0; //O(n^2)
    qs ob;
    ob.get(a);
    ob.quicksort(0,n-1);


j=1;i=0;int d;
while(j<n)
{   d=ob.A[j]-ob.A[i];
    if(d==k) {count++;j++;}
    else if(d>k) i++;
    else if(d<k) j++;
}

return count;
}
