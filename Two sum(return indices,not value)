#include<bits/stdc++.h>
class Solution {
public:
    //O(n^2)-Brute Force
    vector<int> twoSum(vector<int>& nums, int target) {
       int n=nums.size(),i=0,j=n-1,sum=0;
        vector<int> result;
        for(i=0;i<n-1;i++)
        {
            for(j=i+1;j<n;j++)
            {
                sum=nums[i]+nums[j];
                if(sum==target){
                    result.push_back(i);
                    result.push_back(j);break;}
            }
        }
            return result;
    }
        
};

//Using hashtable
#include<bits/stdc++.h>
class Solution {
public:
    //Time-O(n) | Space -O(n)
    vector<int> twoSum(vector<int>& nums, int target) {
       int n=nums.size(),i=0,j=n-1,compliment;
        vector<int> result;
        map<int,int> table;
        for(int i=0;i<n;i++)   //O(n)
            table[nums[i]]=i;
        for(int i=0;i<n;i++)   //O(n)
        {
            compliment=target-nums[i];
            if(table[compliment] && table[compliment]!=i)
            {
                result.push_back(i);
                result.push_back(table[compliment]);
                break;
            }
            
        }
        return result;
    }
        
};
