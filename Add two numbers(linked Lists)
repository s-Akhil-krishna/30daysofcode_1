//Question :https://leetcode.com/problems/add-two-numbers/submissions/

//My first attempt (doesnt work for very long numbers)
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *temp=l1;
        long sum1=0,sum2=0;
        string str1="",str2="";
        
        while(temp!=NULL)
        {
            str1+= to_string(temp->val);
            temp=temp->next;
        }
        temp=l2;
        while(temp!=NULL)
        {
            str2+=to_string(temp->val);
            temp=temp->next;
        }
        reverse(str1.begin(),str1.end());reverse(str2.begin(),str2.end());
        sum1=stol(str1)+stol(str2);
        str1=to_string(sum1);reverse(str1.begin(),str1.end());
        
        string str="";str+=str1[0];
        ListNode *l3 = new ListNode(stoi(str));
        ListNode *cur=l3;
        for(int i=1;i<str1.length();i++)
        {
            str="";
            str+=str1[i];
            ListNode *newnode= new ListNode(stoi(str));
            cur->next=newnode;
            cur=cur->next;
        }
        return l3;
    }
};

//final solution
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *p1=l1;
        ListNode *p2=l2;
        ListNode *dummy=new ListNode(0);
        ListNode *cur=dummy;
        int carry=0;
        while(p1!=NULL || p2!=NULL)
        {
            int x = (p1!=NULL)?p1->val:0;
            int y=(p2!=NULL)? p2->val:0;
            int sum=x+y+carry;
            carry=sum/10;
            ListNode *newnode=new ListNode(sum%10);
            cur->next=newnode;
            cur=cur->next;
            if(p1!=NULL) p1=p1->next;
            if(p2!=NULL) p2=p2->next;
            
        }
        if(carry>0)
            cur->next=new ListNode(carry);
        return dummy->next;
    }
};























